[{"name":"app.R","content":"# Install required packages if needed:\r\n# install.packages(\"shiny\")\r\n# install.packages(\"shinydashboard\")\r\n# install.packages(\"ggplot2\")\r\n\r\nlibrary(shiny)\r\nlibrary(shinydashboard)\r\nlibrary(ggplot2)\r\n\r\n# Create a list of explanations for each variable\r\nexplanations <- list(\r\n  mpg   = \"Miles per gallon (mpg) indicates the fuel efficiency of the car. Higher mpg means better fuel economy.\",\r\n  cyl   = \"Number of cylinders (cyl) reflects the engine size and potential power. More cylinders can imply more power, but may lower fuel efficiency.\",\r\n  disp  = \"Displacement (disp) measures the engine's volume in cubic inches. Larger displacement usually signals more power.\",\r\n  hp    = \"Horsepower (hp) represents the engine's power output. Higher horsepower typically means a more powerful engine.\",\r\n  drat  = \"Rear axle ratio (drat) affects acceleration and fuel efficiency. A higher ratio can mean quicker acceleration.\",\r\n  wt    = \"Weight (wt) of the car (in 1000 lbs) influences performance and fuel economy; heavier cars often perform slower.\",\r\n  qsec  = \"Quarter mile time (qsec) measures performance. Lower times indicate better acceleration.\",\r\n  vs    = \"Engine shape (vs): 0 = V-shaped engine, 1 = straight engine. This relates to the design of the engine.\",\r\n  am    = \"Transmission type (am): 0 = automatic, 1 = manual. This affects driving experience and performance.\",\r\n  gear  = \"Number of forward gears (gear) can influence the car's speed range and performance.\",\r\n  carb  = \"Number of carburetors (carb) relates to the engine's fuel delivery, affecting performance.\"\r\n)\r\n\r\nui <- dashboardPage(\r\n  dashboardHeader(title = \"MTCars Dashboard\"),\r\n  dashboardSidebar(\r\n    sidebarMenu(\r\n      menuItem(\"Dashboard\", tabName = \"dashboard\", icon = icon(\"dashboard\"))\r\n    )\r\n  ),\r\n  dashboardBody(\r\n    tabItems(\r\n      tabItem(tabName = \"dashboard\",\r\n              # First row: Summary stats & Scatter plot side by side\r\n              fluidRow(\r\n                box(\r\n                  title = \"Variable Summary\", status = \"primary\",\r\n                  solidHeader = TRUE, width = 6,\r\n                  # Dropdown for selecting the variable to summarize\r\n                  selectInput(\"summaryVar\", \"Select Variable:\", \r\n                              choices = names(mtcars)[sapply(mtcars, is.numeric)],\r\n                              selected = \"mpg\"),\r\n                  verbatimTextOutput(\"variableSummary\")\r\n                ),\r\n                box(\r\n                  title = \"Scatter Plot\", status = \"primary\",\r\n                  solidHeader = TRUE, width = 6,\r\n                  plotOutput(\"scatterPlot\", height = 250)\r\n                )\r\n              ),\r\n              # Second row: Explanation of summary stats\r\n              fluidRow(\r\n                box(\r\n                  title = \"Summary Explanation\", status = \"info\",\r\n                  solidHeader = TRUE, width = 12,\r\n                  textOutput(\"summaryExplanation\")\r\n                )\r\n              ),\r\n              # Third row: Controls for scatter plot customization\r\n              fluidRow(\r\n                box(\r\n                  title = \"Customize Scatter Plot\", status = \"warning\",\r\n                  solidHeader = TRUE, width = 12,\r\n                  selectInput(\"xvar\", \"X-axis Variable\", \r\n                              choices = names(mtcars)[sapply(mtcars, is.numeric)],\r\n                              selected = \"wt\"),\r\n                  selectInput(\"yvar\", \"Y-axis Variable\", \r\n                              choices = names(mtcars)[sapply(mtcars, is.numeric)],\r\n                              selected = \"mpg\")\r\n                )\r\n              )\r\n      )\r\n    )\r\n  )\r\n)\r\n\r\nserver <- function(input, output, session) {\r\n  # Render summary statistics for the selected variable\r\n  output$variableSummary <- renderPrint({\r\n    varData <- mtcars[[input$summaryVar]]\r\n    summary(varData)\r\n  })\r\n  \r\n  # Render a text explanation for the selected variable\r\n  output$summaryExplanation <- renderText({\r\n    selected <- input$summaryVar\r\n    explanation <- explanations[[selected]]\r\n    if (is.null(explanation)) {\r\n      \"No explanation available for this variable.\"\r\n    } else {\r\n      explanation\r\n    }\r\n  })\r\n  \r\n  # Render a scatter plot based on user-selected variables\r\n  output$scatterPlot <- renderPlot({\r\n    ggplot(mtcars, aes_string(x = input$xvar, y = input$yvar)) +\r\n      geom_point(color = \"#2C3E50\", size = 3) +\r\n      theme_minimal() +\r\n      labs(title = paste(\"Scatter Plot:\", input$yvar, \"vs\", input$xvar),\r\n           x = input$xvar, y = input$yvar)\r\n  })\r\n}\r\n\r\nshinyApp(ui, server)\r\n","type":"text"}]
